{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SwaggerForMkdocs","text":"<p>Support to implement your fastapi in you mkdocs documentation.</p> <p>usage:</p> <pre><code>pip install git+https://github.com/BartvanWoesik/SwaggerForMkdocs.git\n</code></pre>"},{"location":"code/","title":"Code","text":""},{"location":"code/#transform-swagger-json","title":"Transform swagger json","text":""},{"location":"code/#swagger_for_mkdocs.transform_swagger_json.change_server_host","title":"<code>change_server_host(openapi_json, new_host, description)</code>","text":"<p>Change server in openapi_json to correspond with the server used for the FastAPI endpoint.</p> <p>Parameters:</p> Name Type Description Default <code>openapi_json</code> <code>dict</code> <p>dictionary structured with the openapi format.</p> required <code>new_host</code> <code>str</code> <p>string with the base url</p> required <code>description</code> <code>str</code> <p>description of the new server</p> required <p>Returns:</p> Name Type Description <code>openapi_json</code> <code>dict</code> <p>json file structured with the openapi format.</p> Source code in <code>swagger_for_mkdocs\\transform_swagger_json.py</code> <pre><code>def change_server_host(openapi_json: dict, new_host: str, description: str) -&gt; dict:\n    \"\"\"\n    Change server in openapi_json to correspond with the server used for the FastAPI endpoint.\n\n    Args:\n        openapi_json: dictionary structured with the openapi format.\n        new_host: string with the base url\n        description: description of the new server\n\n    Returns:\n        openapi_json: json file structured with the openapi format.\n\n\n    \"\"\"\n    # Load JSON string into a dictionary\n    openapi_json['servers'] = [{\n                                \"url\": new_host,\n                                \"description\": description\n                                }]\n    return openapi_json\n</code></pre>"},{"location":"code/#swagger_for_mkdocs.transform_swagger_json.generate_openapi_config","title":"<code>generate_openapi_config(app, title, tags, version, middleware)</code>","text":"<p>Generates OpenAPI config from a FastAPI app with optional modifications.</p> Source code in <code>swagger_for_mkdocs\\transform_swagger_json.py</code> <pre><code>def generate_openapi_config(app: FastAPI, title: str, tags: str, version: str, middleware: bool) -&gt; dict:\n    \"\"\"\n    Generates OpenAPI config from a FastAPI app with optional modifications.\n    \"\"\"\n    modified_app = modify_app_for_swagger(app, title=title, tags=tags, version=version, middleware=middleware)\n    return modified_app.openapi()\n</code></pre>"},{"location":"code/#swagger_for_mkdocs.transform_swagger_json.save_openapi_config","title":"<code>save_openapi_config(app, path='', config_name='openapi.json', title='', tags=None, version='', host=None, description='No description.', middleware=True)</code>","text":"<p>Saves and corrects the OpenAPI configuration as a JSON file.</p> <p>Parameters:</p> Name Type Description Default <code>app</code> <code>FastAPI</code> <p>FastAPI object.</p> required <code>path</code> <code>str</code> <p>Location to store the OpenAPI configuration.</p> <code>''</code> <code>config_name</code> <code>str</code> <p>Name of the OpenAPI configuration file.</p> <code>'openapi.json'</code> <code>title</code> <code>str</code> <p>Title of FastAPI app.</p> <code>''</code> <code>tags</code> <code>str</code> <p>Tags related to FastAPI app.</p> <code>None</code> <code>version</code> <code>str</code> <p>Version of FastAPI app.</p> <code>''</code> <code>host</code> <code>str</code> <p>Base URL of the server.</p> <code>None</code> <code>description</code> <code>str</code> <p>Description of the FastAPI app.</p> <code>'No description.'</code> <code>middleware</code> <code>bool</code> <p>Allow middleware to be set.</p> <code>True</code> Source code in <code>swagger_for_mkdocs\\transform_swagger_json.py</code> <pre><code>def save_openapi_config(app: FastAPI, path: str = '', config_name: str = 'openapi.json',\n                        title: str = \"\", tags: str = None, version: str = \"\",\n                        host: str = None, description: str = 'No description.', middleware: bool = True) -&gt; None:\n    \"\"\"\n    Saves and corrects the OpenAPI configuration as a JSON file.\n\n    Args:\n        app: FastAPI object.\n        path: Location to store the OpenAPI configuration.\n        config_name: Name of the OpenAPI configuration file.\n        title: Title of FastAPI app.\n        tags: Tags related to FastAPI app.\n        version: Version of FastAPI app.\n        host: Base URL of the server.\n        description: Description of the FastAPI app.\n        middleware: Allow middleware to be set.\n    \"\"\"\n    openapi_config = generate_openapi_config(app, title=title, tags=tags, version=version, middleware=middleware)\n    if host:\n        openapi_config = change_server_host(openapi_config, host, description)\n    save_openapi_json(openapi_config, path=path, config_name=config_name)\n</code></pre>"},{"location":"code/#swagger_for_mkdocs.transform_swagger_json.save_openapi_json","title":"<code>save_openapi_json(openapi_data, path='', config_name='openapi.json')</code>","text":"<p>Saves OpenAPI data to a JSON file.</p> Source code in <code>swagger_for_mkdocs\\transform_swagger_json.py</code> <pre><code>def save_openapi_json(openapi_data: dict, path: str = '', config_name: str = 'openapi.json') -&gt; None:\n    \"\"\"\n    Saves OpenAPI data to a JSON file.\n    \"\"\"\n    with open(path + config_name, \"w\") as file:\n        json.dump(openapi_data, file, indent=2)\n</code></pre>"},{"location":"code/#transform-app","title":"Transform app","text":""},{"location":"code/#swagger_for_mkdocs.transform_app.modify_app_for_swagger","title":"<code>modify_app_for_swagger(app, title='', tags=None, version='', middleware=True)</code>","text":"<p>Chan FastAPI app to improve swagger documentation in mkdocs.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Title of FastAPI app.</p> <code>''</code> <code>tags</code> <code>str</code> <p>Tags related to FastAPI app.</p> <code>None</code> <code>version</code> <code>str</code> <p>Version of FastAPI app.</p> <code>''</code> <code>middleware</code> <code>bool</code> <p>Allow middelware to be set.</p> <code>True</code> Source code in <code>swagger_for_mkdocs\\transform_app.py</code> <pre><code>def modify_app_for_swagger(app: FastAPI, title: str = \"\", tags: str = None, version: str=\"\", middleware: bool = True) -&gt; FastAPI:\n    \"\"\"\n    Chan FastAPI app to improve swagger documentation in mkdocs.\n\n    Args:\n        title: Title of FastAPI app.\n        tags: Tags related to FastAPI app.\n        version: Version of FastAPI app.\n        middleware: Allow middelware to be set. \n    \"\"\"\n\n    # Set metadata\n    app.title = title\n    app.openapi_tags = tags\n    app.version = version\n\n    # Add CORS middleware\n    if middleware:\n        app.add_middleware(\n            CORSMiddleware,\n            allow_origins=[\"*\"],# Allow requests from any origin\n            allow_credentials=True,\n            allow_methods=[\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\n            allow_headers=[\"*\"],\n        )\n\n    return app\n</code></pre>"}]}